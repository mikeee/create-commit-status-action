name: All
on:
  pull_request:
    branches:
      - "release"
      - "dev"

  push:
    branches:
     - "release"

jobs:
  go-lint:
    name: go-lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.61

  go-unit-test:
    name: unit-test
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Test
        run: |
          go test -v -race ./...

  go-build-and-compress:
    name: build-and-compress
    runs-on: ubuntu-latest
    needs:
      - go-lint
      - go-unit-test

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Build
        run: |
          make release

      - name: Run UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          files: |
            ./main-darwin-amd64
            ./main-linux-amd64
            ./main-linux-arm64
            ./main-windows-amd64
          args: -q -9 --force-macos

      - name: Print UPX version
        run: upx --version

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-files
          path: |
            .
            .github/*
            !cmd/*
            !pkg/*
            !*.go
            !go.mod
            !go.sum
            !Makefile

  release-debug:
    name: release-debug
    runs-on: ubuntu-latest
    needs: go-build-and-compress
    permissions:
      contents: read

    steps:
      - name: Checkout repo (main branch)
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
         name: release-files

      - name: Display all
        run: |
          ls -R

  release-test:
    name: release-test
    strategy:
      fail-fast: false # allow for all tests to complete
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest] # TODO: add arm64 validation
        node_version: [18, 20, 22]
    runs-on: ${{ matrix.os }}
    needs: go-build-and-compress
    permissions:
      statuses: write
      contents: read

    steps:
      - name: Checkout repo (main branch)
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
         name: release-files

      - name: Make release binaries executable
        if: runner.os != 'Windows'
        run: |
          chmod +x main-*

      - name: Display all
        run: |
          ls -R

      - name: Run action
        uses: ./
        with:
          token: ${{ github.token }}
          repository-owner: mikeee
          repository: create-commit-status-action
          sha: ${{ github.sha }}
          state: success
          target-url: ""
          description: release-test
          context: release-test/${{ matrix.os }}-node${{ matrix.node_version }}


  release:
    name: release
    runs-on: ubuntu-latest
    needs:
      - go-lint
      - go-unit-test
      - go-build-and-compress
    permissions:
      contents: write

    if: ${{ github.event_name == 'push' && github.ref_name == 'release' }}

    steps:
      - name: Checkout repo (main branch)
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
         name: release-files

      - name: Display repository structure
        run: |
          ls -R

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: release
          branch: main

